service: () -> {
    addPatient: (record {age:nat64; bloodType:text; name:text; medicalHistory:text; gender:text}) -> (variant {Ok:record {id:text; age:nat64; bloodType:text; name:text; createdAt:nat64; updatedAt:opt nat64; medicalHistory:text; gender:text}; Err:variant {InvalidPayload:text; NotFound:text}});
    deletePatient: (text) -> (variant {Ok:record {id:text; age:nat64; bloodType:text; name:text; createdAt:nat64; updatedAt:opt nat64; medicalHistory:text; gender:text}; Err:variant {InvalidPayload:text; NotFound:text}});
    getPatient: (text) -> (variant {Ok:record {id:text; age:nat64; bloodType:text; name:text; createdAt:nat64; updatedAt:opt nat64; medicalHistory:text; gender:text}; Err:variant {InvalidPayload:text; NotFound:text}}) query;
    getPatients: () -> (variant {Ok:vec record {id:text; age:nat64; bloodType:text; name:text; createdAt:nat64; updatedAt:opt nat64; medicalHistory:text; gender:text}; Err:variant {InvalidPayload:text; NotFound:text}}) query;
    updatePatient: (text, record {age:nat64; bloodType:text; name:text; medicalHistory:text; gender:text}) -> (variant {Ok:record {id:text; age:nat64; bloodType:text; name:text; createdAt:nat64; updatedAt:opt nat64; medicalHistory:text; gender:text}; Err:variant {InvalidPayload:text; NotFound:text}});
}
